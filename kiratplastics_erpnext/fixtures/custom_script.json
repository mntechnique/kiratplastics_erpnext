[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2016-06-01 18:27:50.391692", 
  "name": "Sales Invoice-Client", 
  "script": "var excise_account;\nvar zero_price_list;\n\nfunction get_company_account(frm) {\n   frappe.call({\n      method: \"kiratplastics_erpnext.kirat_plastics_erpnext.doctype.kp_settings.kp_settings.get_ep_account\",\n      args: {\n         \"company\": frm.doc.company\n      },\n      callback: function(r) {\n         excise_account = r.message; //excise_account is a global variable.\n      }\n   });\n}\n\nfunction get_zero_price_list(frm) {\n   frappe.call({\n      method: \"kiratplastics_erpnext.kirat_plastics_erpnext.doctype.kp_settings.kp_settings.get_zero_price_list\",\n      args: {},\n      callback: function(r) {\n        zero_price_list = r.message; //zero_price_list is a global variable\n      }\n   });\n}\n\nfunction set_excise_chapter_filter(frm) {\n   //Set query filter\n    frm.set_query(\"kirat_excise_chapter_head\", function() {\n        return {\n            \"filters\": {\n                \"is_group\": \"No\"\n            }\n        };\n    });\n}\n\nfunction make_taxes_unsortable(frm) {\n   frm.page.body.find('[data-fieldname=\"taxes\"] [data-idx] .data-row').removeClass('sortable-handle');\n}\n\n//Replaces calculation of item value\ncur_frm.cscript.calculate_item_values = function() {    \n    var me = this;\n    if (!this.discount_amount_applied) {\n        $.each(this.frm.doc[\"items\"] || [], function(i, item) {\n            frappe.model.round_floats_in(item);\n            item.net_rate = item.rate;\n            item.amount = flt(item.rate * item.qty, precision(\"amount\", item));\n            item.net_amount = item.amount;\n            item.item_tax_amount = 0.0;\n            calculate_excise_duty_amount(item);\n            me.set_in_company_currency(item, [\"price_list_rate\", \"rate\", \"amount\", \"net_rate\", \"net_amount\"]);\n        });\n    }\n}\n\nfunction calculate_excise_duty_amount(item) {\n   var item_price;\n   var item_price_for_excise_calc;\n\n   if (item.price_list_rate != 0) {\n      item_price = item.price_list_rate;\n   } else {\n      item_price = item.rate;\n   }\n   //Deprecated: 160521: Calculate excise rate ONLY with excise price.\n   //It WILL be entered manually for each item.\n   // if (item.kirat_excise_price != 0) {\n   //    item_price_for_excise_calc = item.kirat_excise_price;\n   // } else {\n   //    item_price_for_excise_calc = item_price; //Price list rate or rate.\n   // }\n   item_price_for_excise_calc = item.kirat_excise_price;\n\n   var excise_duty_amt = (item.qty * item_price_for_excise_calc) * (item.kirat_excise_duty_rate / 100);\n   item.kirat_excise_duty_amt = excise_duty_amt;\n   item.kirat_total_amt_with_excise = item.amount + excise_duty_amt;\n}\n\nfunction inject_excise_row_and_append_taxes(frm) {\n   \n   //Calculate total excise amount for all items\n    var items = frm.doc.items;\n    var total_ed = 0.0;\n    var total_ea = 0.0; //Total Amount with Excise.\n\n    //Inject total as zero for Sample and Challan.\n    // if (frm.doc.kirat_invoice_type == \"Invoice for Sample\" | frm.doc.kirat_invoice_type == \"Challan\") {\n    //    total_ed = 0.0;\n    //    total_ea = 0.0;\n    // } else {\n    //     for (var i = 0; i <items.length; i++) {\n    //        total_ed += items[i].kirat_excise_duty_amt;\n    //        total_ea += items[i].kirat_total_amt_with_excise;\n    //     }\n    // } \n\n    if (frm.doc.kirat_invoice_type == \"Challan\") {\n       total_ed = 0.0;\n       total_ea = 0.0;\n    } else {\n        for (var i = 0; i <items.length; i++) {\n           total_ed += items[i].kirat_excise_duty_amt;\n           total_ea += items[i].kirat_total_amt_with_excise;\n        }\n    } \n\n    //Set total fields in Doc\n    frm.set_value(\"kirat_excise_payable_total\", total_ed);\n    frm.set_value(\"kirat_amount_with_excise_total\", total_ea);\n\n    var taxes_temp = frm.doc.taxes;\n    \n    //Find and delete Excise rows from taxes_temp;\n    if (taxes_temp) {\n      var taxes_temp_temp = taxes_temp; //!Removing elements from array while iterating over it may be hazardous.\n      \n      for(var i = 0; i <= taxes_temp_temp.length - 1; i++) {\n        if (taxes_temp_temp[i].description.indexOf(\"Excise\") > -1) {\n          taxes_temp.splice(i, 1);\n        }\n      }\n    }\n        \n    //Clear the taxes table.\n    frm.clear_table(\"taxes\");\n\n    //Inject Excise row as first row.\n    var si = locals['Sales Invoice'][si];\n    var ed = frappe.model.add_child(frm.doc,'Sales Taxes and Charges','taxes');   \n    //ed.account_head = \"Excise Payable - KPPL\";\n    ed.account_head = excise_account; //1\n    ed.charge_type = \"Actual\";\n    ed.description = \"Excise Duty Payable\";\n    ed.tax_amount = total_ed;\n    \n    if (!taxes_temp) { return; } //to prevent taxes_temp nullref in for loop.\n\n    for (var i = 0; i < taxes_temp.length; i++) {\n        var tr = frappe.model.add_child(frm.doc,'Sales Taxes and Charges','taxes');\n        tr.account_head = taxes_temp[i].account_head;\n        tr.description = taxes_temp[i].description;\n\n        if (taxes_temp[i].charge_type != \"Actual\") {\n           tr.charge_type = \"On Previous Row Total\";\n           tr.row_id = 1;\n           tr.rate = taxes_temp[i].rate;\n        } else {\n           tr.charge_type = taxes_temp[i].charge_type;\n           tr.tax_amount = taxes_temp[i].tax_amount;\n        }\n    }\n}\n\nfunction set_item_filter_query(frm) {\n   frm.set_query(\"item_code\", \"items\", function() {\n      return {\n        query: \"kiratplastics_erpnext.kirat_plastics_erpnext.kp_api.kp_sinv_item_query\",\n        filters: { \n           \"cust_name\": frm.doc.customer,\n           \"excise_chapter\": frm.doc.kirat_excise_chapter_head\n        }\n      };\n   });\n}\n\n//Prevent duplicate items. \n//Description property isnt added to the json until after the row gets added to the items list\n//OR the line-item form is closed.\nfrappe.ui.form.on(\"Sales Invoice Item\", \"item_code\", function(frm, cdt, cdn) {\n   var sii = locals[cdt][cdn];\n   //msgprint(frm.doc.items);\n   for (var i = 0; i < frm.doc.items.length; i++) {\n      if ((frm.doc.items[i].item_code == sii.item_code)) {\n         if (frm.doc.items[i].hasOwnProperty(\"description\")) {\n           msgprint(\"Item \" + sii.item_code + \" has already been added!\");\n           sii.item_code = \"\";\n           break;\n         }\n      }\n   }\n});\n\nfunction set_customer_readonly(frm) {\n  if (frm.doc.items) {\n    frm.set_df_property(\"customer\", \"read_only\", (frm.doc.items.length > 0));\n  }\n}\nfunction set_chapter_head_readonly(frm) {\n  if (frm.doc.items) {\n   frm.set_df_property(\"kirat_excise_chapter_head\", \"read_only\", (frm.doc.items.length > 0));\n  }\n}\nfunction set_invoice_type_and_series_readonly(frm) {\n   if (frm.doc.items) {\n    frm.set_df_property(\"kirat_invoice_type\", \"read_only\", (frm.doc.items.length > 0));\n    frm.set_df_property(\"naming_series\", \"read_only\", (frm.doc.items.length > 0));\n   }\n}\nfunction set_excise_price_readonly(frm) { \n   //frm.set_df_property(\"kirat_excise_price\", \"read_only\", (frm.doc.kirat_invoice_type != \"Supplementary Invoice\"));\n    var df = frappe.meta.get_docfield(\"Sales Invoice Item\",\"kirat_excise_price\", cur_frm.doc.name);\n    df.read_only = (frm.doc.kirat_invoice_type != \"Supplementary Invoice\");\n}\n\n//FORM EVENTS\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"rate\", function(frm, cdt, cdn) {\n   var sii = locals[cdt][cdn];\n   if ((frm.doc.kirat_invoice_type != \"Invoice for Sample\") && (frm.doc.kirat_invoice_type != \"Challan\")) {\n      if (sii.rate == 0.0) {\n        msgprint(\"Rate cannot be zero for invoices other than Sample and Challan.\");\n      }\n   }\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"kirat_excise_price\", function(frm, cdt, cdn) {   \n  cur_frm.cscript.calculate_item_values();\n  refresh_field(\"items\"); //This updates excise duty amount in the dialog when the excise rate is changed.\n});\n\n\n//Toggle readonly for Customer and Chapter Head depending on whether items exist.\nfrappe.ui.form.on(\"Sales Invoice Item\", \"items_add\", function(frm, cdt, cdn) {\n   set_customer_readonly(frm);\n   set_chapter_head_readonly(frm);\n   set_invoice_type_and_series_readonly(frm);\n   set_excise_price_readonly(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"items_remove\", function(frm) {\n   set_customer_readonly(frm);\n   set_chapter_head_readonly(frm);\n   set_invoice_type_and_series_readonly(frm);\n});\nfrappe.ui.form.on(\"Sales Invoice\", \"refresh\", function(frm) {   \n   set_excise_chapter_filter(frm);\n   make_taxes_unsortable(frm);\n   set_item_filter_query(frm);\n   set_invoice_type_and_series_readonly(frm);\n   set_chapter_head_readonly(frm);\n   set_customer_readonly(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"onload\", function(frm) {\n   make_taxes_unsortable(frm);\n   get_company_account(frm); //Load excise account from settings and keep in global var for *1.\n   get_zero_price_list(frm); //Load zero price list name from settings for *2\n});\n\n// Add Excise Row to Taxes and Charges\nfrappe.ui.form.on(\"Sales Invoice\", \"validate\", function(frm) {\n   inject_excise_row_and_append_taxes(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"kirat_invoice_type\", function(frm) {\n  switch (frm.doc.kirat_invoice_type) {\n     case \"Supplementary Invoice\":\n        frm.set_value(\"naming_series\", \"SINV-SUP-\");\n        frm.set_value(\"selling_price_list\", \"Standard Selling\");\n        break;\n     case \"Invoice for Sample\":\n        frm.set_value(\"naming_series\", \"SINV-SMP-\");\n        //frm.set_value(\"selling_price_list\", \"Zero Rate\");\n        frm.set_value(\"selling_price_list\", zero_price_list); //2\n        break;\n     case \"Challan\":\n        frm.set_value(\"naming_series\", \"SINV-CHL-\");\n        frm.set_value(\"selling_price_list\", zero_price_list); //2\n        break;\n     default:\n        frm.set_value(\"naming_series\", \"SINV-\");\n        frm.set_value(\"selling_price_list\", \"Standard Selling\");\n        break;\n  }\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"kirat_excise_chapter_head\", function(frm) {\n  frappe.model.with_doc(\"Excise Chapter\", frm.doc.kirat_excise_chapter_head, function() { \n     var ec = frappe.model.get_doc(\"Excise Chapter\", frm.doc.kirat_excise_chapter_head);\n      frm.set_value(\"kirat_excise_chapter_name\", ec.excise_chapter_name);\n      frm.set_value(\"kirat_excise_chapter_rate\", ec.rate_of_duty);\n  });\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"customer\", function(frm) {\n  frappe.model.with_doc(\"Customer\", frm.doc.customer, function() { \n     var cu = frappe.model.get_doc(\"Customer\", frm.doc.customer);\n      frm.set_value(\"kirat_cust_ecc_no\", cu.kirat_ecc_no);\n      frm.set_value(\"kirat_cust_cst_lst_no\", cu.kirat_cst_lst_no);\n      frm.set_value(\"kirat_cust_cst_lst_date\", cu.kirat_cst_lst_date);\n  });\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2016-06-01 18:23:13.084713", 
  "name": "Item-Client", 
  "script": "//cur_frm.add_fetch(\"excise_chapter\", \"rate_of_duty\", \"excise_duty_rate\");\n\nfrappe.ui.form.on(\"Item\", \"excise_chapter\", function(frm) {\n   if (!cur_frm.doc.excise_chapter) {\n      cur_frm.set_value(\"excise_duty_rate\", null);\n   } else {\n      frappe.model.with_doc(\"Excise Chapter\", cur_frm.doc.excise_chapter, function(frm){\n         var ec = frappe.model.get_doc(\"Excise Chapter\", cur_frm.doc.excise_chapter);\n         cur_frm.set_value(\"excise_duty_rate\", ec.rate_of_duty);\n      });\n   }\n});\n\nfrappe.ui.form.on(\"Item\", \"refresh\", function(frm) {\n    frm.set_query(\"excise_chapter\", function() {\n        return {\n            \"filters\": {\n                \"is_group\": \"No\"\n            }\n        };\n    });\n});", 
  "script_type": "Client"
 }
]