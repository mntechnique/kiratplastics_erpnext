[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2016-05-09 11:46:05.457569", 
  "name": "Sales Invoice-Client", 
  "script": "function make_invoice_type_readonly_on_save(frm) {\n  // use the __islocal value of doc, to check if the doc is saved or not\n   frm.set_df_property(\"kirat_invoice_type\", \"read_only\", frm.doc.__islocal ? 0 : 1);\n}\n\nfunction set_excise_chapter_filter(frm) {\n   //Set query filter\n    frm.set_query(\"kirat_excise_chapter_head\", function() {\n        return {\n            \"filters\": {\n                \"is_group\": \"No\"\n            }\n        };\n    });\n}\n\nfunction make_taxes_unsortable(frm) {\n   frm.page.body.find('[data-fieldname=\"taxes\"] [data-idx] .data-row').removeClass('sortable-handle');\n}\n\n//Replace with new calculation of item value\ncur_frm.cscript.calculate_item_values = function() {\n    var me = this;\n    if (!this.discount_amount_applied) {\n        $.each(this.frm.doc[\"items\"] || [], function(i, item) {\n            frappe.model.round_floats_in(item);\n            item.net_rate = item.rate;\n            item.amount = flt(item.rate * item.qty, precision(\"amount\", item));\n            item.net_amount = item.amount;\n            item.item_tax_amount = 0.0;\n            calculate_excise_duty_amount(item);\n            me.set_in_company_currency(item, [\"price_list_rate\", \"rate\", \"amount\", \"net_rate\", \"net_amount\"]);\n        });\n    }\n}\n\nfunction calculate_excise_duty_amount(item) {\n   var item_price;\n   var item_price_for_excise_calc;\n\n   if (item.price_list_rate != 0) {\n      item_price = item.price_list_rate;\n   } else {\n      item_price = item.rate;\n   }\n\n   if (item.kirat_excise_price != 0) {\n      item_price_for_excise_calc = item.kirat_excise_price;\n   } else {\n      item_price_for_excise_calc = item_price; //Price list rate or rate.\n   }\n\n   var excise_duty_amt = (item.qty * item_price_for_excise_calc) * (item.kirat_excise_duty_rate / 100);\n   item.kirat_excise_duty_amt = excise_duty_amt;\n   item.kirat_total_amt_with_excise = item.amount + excise_duty_amt;\n}\n\n\n\nfunction inject_excise_row_and_append_taxes(frm) {\n   var taxes_temp = frm.doc.taxes;\n   \n   if (taxes_temp.length > 1) {\n       taxes_temp.splice(0, 1); //This will remove topmost row. (Should be excise row)\n   }\n\n   //Calculate total excise amount for all items\n    var items = frm.doc.items;\n    var total_ed = 0.0;\n    for (var i = 0; i <items.length; i++) {\n      total_ed += items[i].kirat_excise_duty_amt;\n    }\n    \n    //Clear the taxes table.\n    frm.clear_table(\"taxes\");\n\n    //Inject Excise row as first row.\n    var si = locals['Sales Invoice'][si];\n    var ed = frappe.model.add_child(frm.doc,'Sales Taxes and Charges','taxes');   \n    ed.account_head = \"Excise Payable - KPPL\";\n    ed.charge_type = \"Actual\";\n    ed.description = \"Excise Duty Payable\";\n    ed.tax_amount = total_ed;\n    \n    for (var i = 0; i < taxes_temp.length; i++) {\n        var tr = frappe.model.add_child(frm.doc,'Sales Taxes and Charges','taxes');\n        tr.account_head = taxes_temp[i].account_head;\n        if (tr.charge_type != \"Actual\") {\n           tr.charge_type = \"On Previous Row Total\";\n           tr.row_id = 1;\n        } else {\n           tr.charge_type = taxes_temp[i].charge_type;\n        }\n        tr.description = taxes_temp[i].description;\n        //tr.tax_amount = taxes_temp[i].tax_amount;\n        tr.rate = taxes_temp[i].rate;\n    }\n}\n\nfunction set_item_filter_query(frm) {\n   frm.set_query(\"item_code\", \"items\", function() {\n      return {\n        query: \"kiratplastics_erpnext.kirat_plastics_erpnext.kp_api.kp_sinv_item_query\",\n        filters: { \n           \"cust_name\": frm.doc.customer,\n           \"excise_chapter\": frm.doc.kirat_excise_chapter_head\n        }\n      };\n   });\n}\n\n//Toggle readonly for Customer and Chapter Head depending adding/removing items.\nfrappe.ui.form.on(\"Sales Invoice Item\", \"items_add\", function(frm, cdt, cdn) {\n   set_customer_readonly(frm);\n   set_chapter_head_readonly(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"items_remove\", function(frm) {\n   set_customer_readonly(frm);\n   set_chapter_head_readonly(frm);\n});\n\nfunction set_customer_readonly(frm) {\n   frm.set_df_property(\"customer\", \"read_only\", (frm.doc.items.length > 0));\n}\nfunction set_chapter_head_readonly(frm) {\n   frm.set_df_property(\"kirat_excise_chapter_head\", \"read_only\", (frm.doc.items.length > 0));\n}\n\n//FORM EVENTS\nfrappe.ui.form.on(\"Sales Invoice\", \"refresh\", function(frm) {   \n   make_invoice_type_readonly_on_save(frm);\n   set_excise_chapter_filter(frm);\n   make_taxes_unsortable(frm);\n   set_item_filter_query(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"onload\", function(frm) {   \n   make_taxes_unsortable(frm);\n   //set_customer_readonly(frm);\n   //set_chapter_head_readonly(frm);\n});\n\n// Add Excise Row to Taxes and Charges\nfrappe.ui.form.on(\"Sales Invoice\", \"validate\", function(frm) {\n   inject_excise_row_and_append_taxes(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"kirat_invoice_type\", function(frm) {\n  switch (frm.doc.kirat_invoice_type) {\n     case \"Supplementary Invoice\":\n        frm.set_value(\"naming_series\", \"SINV-SUP-\");\n        break;\n     case \"Invoice for Sample\":\n        frm.set_value(\"naming_series\", \"SINV-SMP-\");\n        break;\n     case \"Challan\":\n        frm.set_value(\"naming_series\", \"SINV-CHL-\");\n        break;\n     default:\n        frm.set_value(\"naming_series\", \"SINV-\");\n        break;\n  }\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2016-05-08 14:47:08.888072", 
  "name": "Item-Client", 
  "script": "//cur_frm.add_fetch(\"excise_chapter\", \"rate_of_duty\", \"excise_duty_rate\");\n\nfrappe.ui.form.on(\"Item\", \"excise_chapter\", function(frm) {\n   if (!frm.doc.excise_chapter) {\n      frm.set_value(\"excise_duty_rate\", null);\n   } else {\n      frappe.model.with_doc(\"Excise Chapter\", frm.doc.excise_chapter, function(frm){\n         var ec = frappe.model.get_doc(\"Excise Chapter\", frm.doc.excise_chapter);\n         frm.set_value(\"excise_duty_rate\", ec.rate_of_duty);\n      });\n   }\n});\n\n", 
  "script_type": "Client"
 }
]