[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2016-04-26 17:15:51.487026", 
  "name": "Sales Invoice-Client", 
  "script": "frappe.ui.form.on(\"Sales Invoice\", \"kirat_invoice_type\", function(frm) {\n  switch (frm.doc.kirat_invoice_type) {\n     case \"Supplementary Invoice\":\n        frm.set_value(\"naming_series\", \"SINV-SUP-\");\n        break;\n     case \"Invoice for Sample\":\n        frm.set_value(\"naming_series\", \"SINV-SMP-\");\n        break;\n     case \"Challan\":\n        frm.set_value(\"naming_series\", \"SINV-CHL-\");\n        break;\n     default:\n        frm.set_value(\"naming_series\", \"SINV-\");\n        break;\n  }\n});\n\n//Disable Invoice type selection in modify mode.\nfrappe.ui.form.on(\"Sales Invoice\", \"refresh\", function(frm) {\n    // use the __islocal value of doc, to check if the doc is saved or not\n    frm.set_df_property(\"kirat_invoice_type\", \"read_only\", frm.doc.__islocal ? 0 : 1);\n});\n\n//Filter items.\ncur_frm.set_query(\"item_code\", \"items\", function(doc, cdt, cdn) {\n   return {\n      query: \"kiratplastics_erpnext.kirat_plastics_erpnext.kp_api.kp_sinv_item_query\"\n   };\n});\n\n\n//CHECK THIS\nfrappe.ui.form.on(\"Sales Invoice Item\", \"item_code\", function(frm, cdt, cdn) {\n   recalculateItemTotal(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"rate\", function(frm, cdt, cdn) {\n   recalculateItemTotal(frm);\n});\n\nfrappe.ui.form.on(\"Sales Invoice Item\", \"qty\", function(frm, cdt, cdn) {\n   recalculateItemTotal(frm);\n});\n\n\n//Helpers\nfunction recalculateItemTotal(frm) {\n  var exciseAmt = 0.0;\n  var strTest = \"\";\n  var exciseDutyAmt = 0.0;\n  $.each(frm.doc[\"items\"] || [], function(i, item) {\n    frappe.model.round_floats_in(item);\n    item.net_rate = item.rate;\n    \n    if (item.kirat_excise_price != 0.0) {\n      exciseDutyAmt = calculateExciseDutyAmt(item.qty, item.kirat_excise_price, item.kirat_excise_duty_rate); \n    } else {\n      exciseDutyAmt = calculateExciseDutyAmt(item.qty, item.rate, item.kirat_excise_duty_rate);\n    }\n       \n    var amt = (item.rate * item.qty) + exciseDutyAmt;\n    item.amount = flt(amt, precision(\"amount\", item));\n    item.net_amount = item.amount;\n    item.item_tax_amount = 0.0;\n    strTest = strTest + item.amount + \", \";\n    var tnt = new erpnext.taxes_and_totals;\n    tnt.set_in_company_currency(item, [\"price_list_rate\", \"rate\", \"amount\", \"net_rate\", \"net_amount\"]);\n  });\n  msgprint(strTest);\n}\n\n//price = item price (declared price), rate = duty rate (from chapter head.)\nfunction calculateExciseDutyAmt(qty, price, rate) {\n   return (qty * price) * (rate / 100);\n}\n", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Item", 
  "modified": "2016-04-22 18:41:11.151512", 
  "name": "Item-Client", 
  "script": "//cur_frm.add_fetch(\"excise_chapter\", \"rate_of_duty\", \"excise_duty_rate\");\n\nfrappe.ui.form.on(\"Item\", \"excise_chapter\", function(frm) {\n   if (!frm.doc.excise_chapter) {\n      frm.set_value(\"excise_duty_rate\", null);\n   } else {\n      frappe.model.with_doc(\"Excise Chapter\", frm.doc.excise_chapter, function(frm){\n         var ec = frappe.model.get_doc(\"Excise Chapter\", frm.doc.excise_chapter);\n         frm.set_value(\"excise_duty_rate\", ec.rate_of_duty);\n      });\n   }\n});\n\n", 
  "script_type": "Client"
 }
]